TODO
    Options:
        ✓ Automatic library management
            ✓ Recursive file addition
            ✓ Auto deletion
        ✓ Remember files
        ✓ Check files (hashes) upon restart
        ✓ Draw shadows
        ✓ Perform culling
    Library:
        ✓ sqlite3 for cover images cache
        ✓ sqlite3 for storing metadata
        ✓ Drop down for SortBy
        ✓ Image delegates
        ✓ Image reflow
        ✓ Search bar in toolbar
        ✓ Shift focus to the tab that has the book open
        ✓ Tie file deletion and tab closing to model updates
        ✓ Create separate thread for parser - Show progress in main window
        ✓ Memory management
        ✓ Mass tagging
        ✓ Add capability to sort by new
        ✓ Table view
        ✓ Context menu: Cache, Read, Edit database, delete, Mark read/unread
        ✓ Information dialog widget
        ✓ Allow editing of database data through the UI + for Bookmarks
        Set focus to newly added file
    Reading:
        ✓ Drop down for TOC
        ✓ Override the keypress event of the textedit
        ✓ Use format* icons for toolbar buttons
        ✓ Implement book view settings with a(nother) toolbar
        ✓ Substitute textedit for another widget
        ✓ Theming
        ✓ Keep fontsize and margins consistent - Let page increase in length
        ✓ Fullscreening
        ✓ Remember open tabs
        ✓ Selectable background color for QGraphicsView
        ✓ View modes for QGraphicsView
        ✓ View and hide toolbar actions in a list
        ✓ Line spacing
        ✓ Record progress
        ✓ Text alignment
        ✓ Background color
        ✓ Bookmarks
            ✓ Creation
            ✓ Navigation
            ✓ Editing: Name
            ✓ Deletion
        ✓ Cache next and previous images
        ✓ Set context menu for definitions and the like
        ✓ Paragraph indentation
        Search document using QTextCursor?
        Comic view keyboard shortcuts
    Filetypes:
        ✓ epub support
            ✓ Homegrown solution please
        ✓ cbz, cbr support
            ✓ Keep font settings enabled but only for background color
        ✓ mobi, azw support
            Limit the extra files produced by KindleUnpack
                Have them save to memory
    Other:
        ✓ Define every widget in code
    Bugs:
        If there are files open and the database is deleted, TypeErrors result
        Cover culling does not occur if some other tab has initial focus
        Exiting with Ctrl + Q does not save the cursor position INITIALLY

    Secondary:
        Annotations
        Graphical themes
        Change focus rectangle dimensions
        Tab reordering
        Allow tabs to detach and form their own windows
        Goodreads API: Ratings, Read, Recommendations
        Get ISBN using python-isbnlib
        Pagination
        Use embedded fonts
        Scrolling: Smooth / By Line
        Spacebar should not cut off lines at the top
        Shift to logging instead of print statements
        txt, doc, chm, djvu, fb2 support
        Include icons for filetype emblems
        Drag and drop support for the library
        Comic view modes
            Continuous paging
            Double pages
        Leave comic images on disk in case tab isn't closed and files are remembered
        Give the comic view a 'Save image as...' option
        Ignore a / the / numbers for sorting purposes
        ? Add only one file type if multiple are present
        ? Plugin system for parsers
        ? pdf support
        ? Create emblem per filetype